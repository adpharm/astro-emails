---
import { twMerge } from "tailwind-merge";
import {
  findTailwindClassForCssProperty,
  findValueInPxForCssProperty,
  findUrlForCssProperty,
  findValueForCssProperty,
  findBorderValueForCssProperty,
  calcPx,
} from "@/utils/utils";

interface Props {
  class?: string;
  id?: string;
}

let { class: className = "", id } = Astro.props;

const tableProps: Record<string, string> = {};
if (id) {
  tableProps.id = id;
}

const [paddingClass, classWithoutPadding] = findTailwindClassForCssProperty("padding", className);
const [paddingTop, classWithoutPaddingTop] = findTailwindClassForCssProperty("padding-top", classWithoutPadding);
const [paddingRight, classWithoutPaddingRight] = findTailwindClassForCssProperty(
  "padding-right",
  classWithoutPaddingTop
);
const [paddingBottom, classWithoutPaddingBottom] = findTailwindClassForCssProperty(
  "padding-bottom",
  classWithoutPaddingRight
);
const [paddingLeft, classWithoutPaddingLeft] = findTailwindClassForCssProperty(
  "padding-left",
  classWithoutPaddingBottom
);
className = classWithoutPaddingLeft;

const [textAlignClass, classWithoutTextAlign] = findTailwindClassForCssProperty("text-align", className);
---

<table {...tableProps} class={twMerge("w-full", className)}>
  <tbody>
    <tr>
      <td class={twMerge(paddingClass, paddingTop, paddingRight, paddingBottom, paddingLeft, textAlignClass)}>
        <slot />
      </td>
    </tr>
  </tbody>
</table>
